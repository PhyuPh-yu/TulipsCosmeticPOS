/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.POS;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.time.Clock;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatterBuilder;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextPane;

/**
 *
 * @author phyup
 */
public class SaleForm extends javax.swing.JFrame {

    PreparedStatement pstmt;
    PreparedStatement stmt;
    ResultSet rs;
    Connection con;
    String name = "";
    String price = "";
    String count = "";
    String totalAmount = "";
    String dateValue = "";
    String itemCode = "";
    int itemCount = 0;
    NumberFormat nf = NumberFormat.getInstance(Locale.US);

    /**
     * Creates new form SaleForm
     */
    public SaleForm() {
        initComponents();
        //frameInit();
        getContentPane().setBackground(Color.cyan);
        Toolkit toolKit = getToolkit();
        Dimension size = toolKit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        currentDate();
    }

    public JTextField getTxtCount() {
        return txtCount;
    }

    public JTextField getTxtName() {
        return txtName;
    }

    public void setTxtCount(JTextField txtCount) {
        this.txtCount = txtCount;
    }

    public void setTxtName(JTextField txtName) {
        this.txtName = txtName;
    }

    public void setTxtPrice(JTextField txtPrice) {
        this.txtPrice = txtPrice;
    }

    public void setTxtTotalAmount(JTextField txtTotalAmount) {
        this.txtTotalAmount = txtTotalAmount;
    }

    public JTextField getTxtPrice() {
        return txtPrice;
    }

    public JTextField getTxtBalance() {
        return txtBalance;
    }

    public JTextField getTxtPay() {
        return txtPay;
    }

    public void setTxtBalance(JTextField txtBalance) {
        this.txtBalance = txtBalance;
    }

    public void setTxtPay(JTextField txtPay) {
        this.txtPay = txtPay;
    }

    public void setLblCurrentDate(JLabel lblCurrentDate) {
        this.lblCurrentDate = lblCurrentDate;
    }

    public JLabel getLblCurrentDate() {
        return lblCurrentDate;
    }

    public JTextField getTxtTotalAmount() {
        return txtTotalAmount;
    }

    public void setTxtCurrentDate(JTextField txtCurrentDate) {
        this.txtCurrentDate = txtCurrentDate;
    }

    public JTextField getTxtCurrentDate() {
        return txtCurrentDate;
    }

    public void setTxtItemCode(JTextField txtItemCode) {
        this.txtItemCode = txtItemCode;
    }

    public JTextField getTxtItemCode() {
        return txtItemCode;
    }

    public JTextPane getTxtBillVoucher() {
        return txtBillVoucher;
    }

    public void setTxtBillVoucher(JTextPane txtBillVoucher) {
        this.txtBillVoucher = txtBillVoucher;
    }

    public JTextField getTxtMaxitemCnt() {
        return txtMaxitemCnt;
    }

    public void setTxtMaxitemCnt(JTextField txtMaxitemCnt) {
        this.txtMaxitemCnt = txtMaxitemCnt;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtCount = new javax.swing.JTextField();
        txtTotalAmount = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSellingList = new javax.swing.JTable();
        lblCurrentDate = new javax.swing.JLabel();
        txtCurrentDate = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();
        txtItemCode = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnPrint = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtBillVoucher = new javax.swing.JTextPane();
        lblPay = new javax.swing.JLabel();
        txtPay = new javax.swing.JTextField();
        lblPay1 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        lblMaximuncount = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        txtMaxitemCnt = new javax.swing.JTextField();
        btnVoucherPrint = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Sale Form");
        setBackground(new java.awt.Color(153, 153, 255));
        setName("frame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1197, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(300, 700));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Price");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Count");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Total");

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtCount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountActionPerformed(evt);
            }
        });

        txtTotalAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnAdd.setBackground(new java.awt.Color(102, 102, 255));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setPreferredSize(new java.awt.Dimension(72, 20));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblSellingList.setBackground(new java.awt.Color(0, 255, 204));
        tblSellingList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Count", "TotalAmount", "Date", "Code"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSellingList);

        txtCurrentDate.setBackground(new java.awt.Color(102, 102, 255));
        txtCurrentDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnClose.setBackground(new java.awt.Color(51, 102, 255));
        btnClose.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        txtItemCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtItemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemCodeKeyPressed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(51, 102, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("ItemCode");

        btnPrint.setBackground(new java.awt.Color(51, 102, 255));
        btnPrint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPrint.setText("Bill");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 255));
        jLabel6.setText("Tulip 's Cosmetic Store");

        jScrollPane2.setViewportView(txtBillVoucher);

        lblPay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPay.setText("Pay");

        txtPay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPayKeyPressed(evt);
            }
        });

        lblPay1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblPay1.setText("Balance");

        txtBalance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalanceActionPerformed(evt);
            }
        });

        lblMaximuncount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMaximuncount.setText("Maximun Itemcount :");

        btnClear.setBackground(new java.awt.Color(51, 102, 255));
        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnVoucherPrint.setBackground(new java.awt.Color(51, 102, 255));
        btnVoucherPrint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnVoucherPrint.setText("Print");
        btnVoucherPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoucherPrintActionPerformed(evt);
            }
        });

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDate.setText("Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(105, Short.MAX_VALUE)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                                .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtItemCode)
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(401, 401, 401)
                                        .addComponent(lblCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(lblMaximuncount, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMaxitemCnt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(82, 82, 82)
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(btnVoucherPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(232, 232, 232)
                                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(lblPay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblPay1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                                    .addComponent(txtPay, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(277, 277, 277)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(566, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblCurrentDate)
                        .addGap(396, 396, 396))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDate))
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtPay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblPay))
                                        .addGap(12, 12, 12))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPay1)))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPrint)
                            .addComponent(txtPrice)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(lblMaximuncount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaxitemCnt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnClose)
                            .addComponent(btnClear)
                            .addComponent(btnVoucherPrint)
                            .addComponent(btnDelete))
                        .addGap(69, 69, 69))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(672, Short.MAX_VALUE)))
        );

        setBounds(0, 0, 1211, 724);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            // TODO add your handling code here:
            if (txtName.getText().equals("") || txtPrice.getText().equals("") || txtCount.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please Enter name, price and count");
            } else if (Long.parseLong(txtCount.getText()) > Long.parseLong(txtMaxitemCnt.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Please input the value for count less than maximun item count!");
            } else {
                String name = txtName.getText();
                long price = Long.parseLong(txtPrice.getText().replace(",", ""));
                long count = Integer.parseInt(txtCount.getText());

                long totalAmount = price * count;
                String dateValue = txtCurrentDate.getText();
                String itemCode = txtItemCode.getText();

                Object row[] = {name, txtPrice.getText(), count, nf.format(totalAmount), dateValue, itemCode};
                DefaultTableModel dtmodel = (DefaultTableModel) tblSellingList.getModel();
                dtmodel.addRow(row);
                // txtTotalAmount.edita(false);
                long total;
                if (txtTotalAmount.getText().equals("")) {

                    total = 0;
                } else {

                    total = Long.parseLong(txtTotalAmount.getText().replace(",", ""));
                }
                long t = total + totalAmount;
                //txtTotalAmount.setText(String.valueOf(t));
                txtTotalAmount.setText(nf.format(t));

                //            dtmodel.addRow();
                // insertOrder(name, price, count, dateValue, totalAmount);
                itemDataUpdate();
                clearData();
            }
        } catch (Exception ex) {
            Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame();
        int resp = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit?",
                "Exit?", JOptionPane.YES_NO_OPTION);

        if (resp == JOptionPane.YES_OPTION) {
            //frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            //System.exit(0);
            DefaultTableModel dtModel = (DefaultTableModel) this.tblSellingList.getModel();
            if (dtModel.getRowCount() == 0) {
                dispose();
                new MainForm().show();
            } else {
                try {
                    itemDeleteData();
                    dispose();
                    new MainForm().show();
                } catch (SQLException ex) {
                    Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else {
            frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtItemCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemCodeKeyPressed
        try {
            // TODO add your handling code here:

            String itemCode = null;
            connect();
            if (!txtItemCode.getText().equals("")) {
                itemCode = txtItemCode.getText();
            }
            pstmt = con.prepareStatement("select ItemName, ItemPrice, ItemCount from itemcode where Itemcode = ?;");
            pstmt.setString(1, itemCode);
            rs = pstmt.executeQuery();
            while (rs.next()) {
                txtName.setText(rs.getString(1));
                txtPrice.setText(nf.format(Long.parseLong(rs.getString(2))));
                txtMaxitemCnt.setText(rs.getString(3));
            }

            con.close();
            pstmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtItemCodeKeyPressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        double totalAmount = 0.0;
        JFrame frame = new JFrame();
        int resp = JOptionPane.showConfirmDialog(frame, "Are you sure you want to delete this row?",
                "Delete?", JOptionPane.YES_NO_OPTION);

        if (resp == JOptionPane.YES_OPTION) {

            DefaultTableModel tblModelList = (DefaultTableModel) this.tblSellingList.getModel();
            int numRows[] = tblSellingList.getSelectedRows();
            if (numRows.length == 0) {
                JOptionPane.showMessageDialog(rootPane, "Please Select the rows that you want to delete!");
            } else {
                try {

                    int row = numRows.length;
                    if (row > 1) {
                        JOptionPane.showMessageDialog(rootPane, "Please Select the one row!");
                    } else {
                        totalAmount = Double.parseDouble(txtTotalAmount.getText().replace(",", "")) - Double.parseDouble(tblModelList.getValueAt(numRows[row - 1], 3).toString().replace(",", ""));
                        itemDeleteData();
                        tblModelList.removeRow(numRows[row - 1]);
                        txtTotalAmount.setText(nf.format(totalAmount));
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                //txtTotalAmount.setText(nf.format(totalAmount)String.valueOf(totalAmount));

            }
        } else {
            //frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed

        try {
            //try {
            // TODO add your handling code here:
            if (txtPay.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please input the pay!");
            } else {
                tblInsert();
                //billPrint();
                billPrintUpd();
                itemDataUpdate();
                // txtBillVoucher.print();
            }
        } catch (SQLException ex) {
            Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnPrintActionPerformed

    private void txtCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountActionPerformed

    private void txtPayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPayKeyPressed
        // TODO add your handling code here:
        if (!txtPay.getText().equals("")) {
            long balance = Long.parseLong(txtPay.getText()) - Long.parseLong(txtTotalAmount.getText().replace(",", ""));
            //txtBalance.setText(String.valueOf(balance));
            txtBalance.setText(nf.format(balance));
        }

    }//GEN-LAST:event_txtPayKeyPressed

    private void txtBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtmodal = (DefaultTableModel) this.tblSellingList.getModel();
        //if (tblSellingList.getRowCount() > 0) {
        //    for (int i = tblSellingList.getRowCount() - 1; i >= 0; i--) {
        //        dtmodal.removeRow(i);
        //    }
        //}
        if (dtmodal.getRowCount() == 0) {
            dtmodal.setRowCount(0);
            txtBillVoucher.setText("");
            txtTotalAmount.setText("");
            txtPay.setText("");
            txtBalance.setText("");
            clearData();
        } else {
            try {
                itemDeleteData();
                dtmodal.setRowCount(0);
                txtBillVoucher.setText("");
                txtTotalAmount.setText("");
                txtPay.setText("");
                txtBalance.setText("");
                clearData();
            } catch (SQLException ex) {
                Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnVoucherPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoucherPrintActionPerformed
        try {
            // TODO add your handling code here:
            if (!txtBillVoucher.getText().equals("")){
                txtBillVoucher.print();
            }else{
                JOptionPane.showMessageDialog(rootPane, "You Don't have the bill");
            }
            
        } catch (PrinterException ex) {
            Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVoucherPrintActionPerformed

    private void insertOrder(String name, Double price, Integer count, String dateValue, Double totalAmount) throws SQLException {
        //   throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        try {
            connect();
            //Statement stmt=con.createStatement();  
            pstmt = con.prepareStatement("insert into order1(name, price, count, totalAmount, dateValue) values(? , ?, ?, ?, ?)");
            // String sql = "insert into order1(name, price, count, totalAmount, dateValue) values(@name,@price,@count,@totalAmount,@dateValue)"; 
            pstmt.setString(1, name);
            pstmt.setString(2, price.toString());
            pstmt.setString(3, count.toString());
            pstmt.setString(4, totalAmount.toString());
            pstmt.setString(5, dateValue);
            pstmt.executeUpdate();
            con.close();
            pstmt.close();

        } catch (SQLException ex) {
            Logger.getLogger(SaleItemList.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnVoucherPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCurrentDate;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblMaximuncount;
    private javax.swing.JLabel lblPay;
    private javax.swing.JLabel lblPay1;
    private javax.swing.JTable tblSellingList;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextPane txtBillVoucher;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtCurrentDate;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtMaxitemCnt;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPay;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables

    private void currentDate() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();
        txtCurrentDate.setText(dtf.format(now));
        txtCurrentDate.enable(false);
    }

    private void connect() {
        try {
            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/orderlist", "root", "phyu12@");

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SaleItemList.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearData() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        txtItemCode.setText("");
        txtName.setText("");
        txtPrice.setText("");
        txtCount.setText("");
        txtMaxitemCnt.setText("0");
    }

    private void tblInsert() throws SQLException {
//throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        //MessageFormat header = new MessageFormat("Tulip's Cosmetic Store");
        //MessageFormat footer = new MessageFormat("21St Latha Township Yangon");
        //try {
        //    tblSellingList.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        //} catch (PrinterException ex) {
        //    Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        //}
        //txtTotalAmount.print();
        connect();
        //Statement stmt=con.createStatement();  
        for (int i = 0; i < tblSellingList.getRowCount(); i++) {
            //pstmt = con.prepareStatement("insert into order1(name, price, count, totalAmount, dateValue) values(? , ?, ?, ?, ?)");
            name = tblSellingList.getValueAt(i, 0).toString();
            System.out.println(name);
            price = tblSellingList.getValueAt(i, 1).toString();
            System.out.println(price);
            count = tblSellingList.getValueAt(i, 2).toString();
            System.out.println(count);
            totalAmount = tblSellingList.getValueAt(i, 3).toString();
            System.out.println(totalAmount);
            dateValue = tblSellingList.getValueAt(i, 4).toString();
            System.out.println(dateValue);
            dateValue = tblSellingList.getValueAt(i, 4).toString();
            System.out.println(dateValue);
            itemCode = tblSellingList.getValueAt(i, 5).toString();
            System.out.println(itemCode);
            pstmt = con.prepareStatement("insert into order1(name, price, count, totalAmount, dateValue, itemCode) values(? , ?, ?, ?, ?, ?)");
            pstmt.setString(1, name);
            pstmt.setString(2, price);
            pstmt.setString(3, count);
            pstmt.setString(4, totalAmount);
            pstmt.setString(5, dateValue);
            pstmt.setString(6, itemCode);
            pstmt.executeUpdate();
        }
        con.close();
        pstmt.close();
    }

    private void billPrint() throws PrinterException {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String billVoucher = "                                                                           " + "Date  :   " + txtCurrentDate.getText() + "\n" + "\n" + "--------------Tulip Cosmetic Store-------------" + "\n" + "\n" + "\n";
        String title = "--------------------------Item Description---------------------" + "\n" + "\n" + "Name" + "     " + "Price" + "     " + "Count" + "     " + "Amount" + "\n------------------------------------------------------------------------";
        String header = billVoucher + title;
        String bill = "";
        String payBalance = "---------------------------Cash Balance---------------------" + "\n" + "\n";
        for (int i = 0; i < tblSellingList.getRowCount(); i++) {
            txtBillVoucher.setText(tblSellingList.getValueAt(i, 0).toString() + "     " + tblSellingList.getValueAt(i, 1).toString() + "  X  " + tblSellingList.getValueAt(i, 2).toString() + "     " + tblSellingList.getValueAt(i, 3).toString() + "     " + "\n\n");
            bill = bill + txtBillVoucher.getText();
        }

        payBalance = payBalance + "TotalAmount" + "  :   " + txtTotalAmount.getText() + ".0" + "\n" + "\n" + "Net Pay" + "          :   " + nf.format(Long.parseLong(txtPay.getText())) + ".0" + "\n" + "\n" + "Balance" + "          :   " + txtBalance.getText() + ".0";
        txtBillVoucher.setText(header + "\n" + bill + "\n\n\n\n" + payBalance + "\n\n\n\n" + "----------------------Thank You----------------------------");

    }

    private void itemDataUpdate() throws SQLException {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        int count = 0;
        // int row = tblSellingList.getRowCount();
        for (int i = tblSellingList.getRowCount() - 1; i < tblSellingList.getRowCount(); i++) {
            count = selectItemCount(i);
            //row = row - 1;
            connect();
            itemCount = count - Integer.parseInt(tblSellingList.getValueAt(i, 2).toString());
            //   try {
            pstmt = con.prepareStatement("update itemcode set ItemCount = ? where ItemCode = ?");
            pstmt.setString(1, String.valueOf(itemCount));
            pstmt.setString(2, tblSellingList.getValueAt(i, 5).toString());
            pstmt.executeUpdate();
            //   } catch (SQLException ex) {
            //       Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
            //   }

            con.close();
            pstmt.close();
        }
    }

    private int selectItemCount(int i) {
        int countData = 0;
        connect();
        try {
            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

            stmt = con.prepareStatement("select ItemCount from itemcode where ItemCode = ?");
            stmt.setString(1, tblSellingList.getValueAt(i, 5).toString());
            rs = stmt.executeQuery();
            while (rs.next()) {
                countData = Integer.parseInt(rs.getString(1));
                System.out.println(itemCount);
            }
            // return countData;

            con.close();
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return countData;
    }

    private void billPrintUpd() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        //String billVoucher =  "                                                              " + "Date  :   " + txtCurrentDate.getText() + "\n"  + "--------------Tulip Cosmetic Store-------------" + "\n"+ "\n" + "\n";
        String billVoucher = "                            Tulip's Cosmetic Store                    " + "\n" + "      No(65), 21st Street, Latha TownShip, Yangon           " + "\n" + "                              Open Daily 24hours                    " + "\n\n";
        String title = "RefNo" + "\n" + "------------------------------------------------------------------------" + "\n" + "Item Name" + "                                          " + "Amount" + "\n------------------------------------------------------------------------";
        String header = billVoucher + title;
        //txtBillVoucher.setText(header + "\n");
        String bill = "";
        String payBalance;
        DefaultTableModel dtmodel = (DefaultTableModel) tblSellingList.getModel();
        for (int i = 0; i < dtmodel.getRowCount(); i++) {
            txtBillVoucher.setText(i + 1 + " " + dtmodel.getValueAt(i, 0).toString() + "\n" + "   " + dtmodel.getValueAt(i, 1).toString() + "  *  " + dtmodel.getValueAt(i, 2).toString().trim() + "                                  " + dtmodel.getValueAt(i, 3).toString() + "\n");
            bill = bill + txtBillVoucher.getText();
        }
        //txtBillVoucher.setText(bill + "\n");
        payBalance = "TotalAmount(Exclusive tax)" + "                 " + txtTotalAmount.getText() + ".0" + "\n" + "Net Pay" + "                                                " + nf.format(Long.parseLong(txtPay.getText())) + ".0" + "\n" + "Balance" + "                                                " + txtBalance.getText() + ".0";
        txtBillVoucher.setText(header + "\n" + bill + "\n" + "------------------------------------------------------------------------" + "\n" + payBalance + "\n\n\n\n" + "                                 Thank You" + "\n           Customer Service Ph.no  :0977000011");

    }

    private void itemDeleteData() throws SQLException {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        int count = 0;
        int row[] = tblSellingList.getSelectedRows();
        int rowCount = tblSellingList.getRowCount();
        if(row.length == 1){
        for (int i = 0; i < row.length; i++) {
            count = selectItemCount(row[i]);
            //row = row - 1;
            connect();
            itemCount = count + Integer.parseInt(tblSellingList.getValueAt(row[i], 2).toString());
            //   try {
            pstmt = con.prepareStatement("update itemcode set ItemCount = ? where ItemCode = ?");
            pstmt.setString(1, String.valueOf(itemCount));
            pstmt.setString(2, tblSellingList.getValueAt(row[i], 5).toString());
            pstmt.executeUpdate();
            //   } catch (SQLException ex) {
            //       Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
            //   }

            con.close();
            pstmt.close();
        }
        }else{
        for (int i = 0; i < rowCount; i++) {
            count = selectItemCount(i);
            //row = row - 1;
            connect();
            itemCount = count + Integer.parseInt(tblSellingList.getValueAt(i, 2).toString());
            //   try {
            pstmt = con.prepareStatement("update itemcode set ItemCount = ? where ItemCode = ?");
            pstmt.setString(1, String.valueOf(itemCount));
            pstmt.setString(2, tblSellingList.getValueAt(i, 5).toString());
            pstmt.executeUpdate();
            //   } catch (SQLException ex) {
            //       Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
            //   }

            con.close();
            pstmt.close();
            
        }
        }
    }
}
