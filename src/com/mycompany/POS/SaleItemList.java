/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.POS;

import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author phyup
 */
public class SaleItemList extends javax.swing.JFrame {

    PreparedStatement pstmt;
    ResultSet rs;
    Connection con;
    String name = "";
    String price = "";
    String count = "";
    String totalAmount = "";
    String dateValue = "";
    String dateFt = "yyyy-MM-dd";
    SimpleDateFormat inputDateFormat = new SimpleDateFormat("EEE MMM dd HH:mm:ss zzz yyyy", Locale.ENGLISH);
    SimpleDateFormat newInputDateFormat = new SimpleDateFormat("yyyy/MM/dd", Locale.ENGLISH);
    Date startDate, endDate;
    NumberFormat nf = NumberFormat.getInstance(Locale.US);

    /**
     * Creates new form Orderlist
     */
    public SaleItemList() {
        initComponents();
        getContentPane().setBackground(Color.cyan);
        currentDate();
        Toolkit toolKit = getToolkit();
        Dimension size = toolKit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        connect();
    }

    public void setTxtAmount(JTextField txtAmount) {
        this.txtAmount = txtAmount;
    }

    public void setTxtName(JTextField txtName) {
        this.txtItemCode = txtName;
    }

    public JTextField getTxtAmount() {
        return txtAmount;
    }

    public JTextField getTxtName() {
        return txtItemCode;
    }

    public JDateChooser getDfmEndDate() {
        return dfmEndDate;
    }

    public JDateChooser getDfmStartDate() {
        return dfmStartDate;
    }

    public void setDfmEndDate(JDateChooser dfmEndDate) {
        this.dfmEndDate = dfmEndDate;
    }

    public void setDfmStartDate(JDateChooser dfmStartDate) {
        this.dfmStartDate = dfmStartDate;
    }

    public JTextField getTxtCurrentDate() {
        return txtCurrentDate;
    }

    public void setTxtCurrentDate(JTextField txtCurrentDate) {
        this.txtCurrentDate = txtCurrentDate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDate = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        btnSelect = new javax.swing.JButton();
        txtAmount = new javax.swing.JTextField();
        btnAllSaleList = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblEndDate = new javax.swing.JLabel();
        lblErrMsg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderList = new javax.swing.JTable();
        lblCurrentDate = new javax.swing.JLabel();
        txtCurrentDate = new javax.swing.JTextField();
        dfmStartDate = new com.toedter.calendar.JDateChooser();
        dfmEndDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sale List Form");
        setBackground(new java.awt.Color(255, 0, 255));
        setForeground(new java.awt.Color(255, 0, 255));
        setName("frame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(500, 600));

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDate.setText("Date");

        lblName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblName.setText("Item Code");

        txtItemCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCodeActionPerformed(evt);
            }
        });

        btnSelect.setBackground(new java.awt.Color(102, 102, 255));
        btnSelect.setText("Select");
        btnSelect.setPreferredSize(new java.awt.Dimension(70, 26));
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });

        btnAllSaleList.setBackground(new java.awt.Color(102, 102, 255));
        btnAllSaleList.setText("AllOrder");
        btnAllSaleList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllSaleListActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(102, 102, 255));
        btnClose.setText("Close");
        btnClose.setPreferredSize(new java.awt.Dimension(70, 26));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lblEndDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEndDate.setText("To");

        lblErrMsg.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblErrMsg.setForeground(new java.awt.Color(255, 51, 51));

        jLabel1.setText("Total Amout");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 255));
        jLabel3.setText("Tulip 's Cosmetic Store");

        btnClear.setBackground(new java.awt.Color(102, 102, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblOrderList.setBackground(new java.awt.Color(51, 255, 153));
        tblOrderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Count", "TotalAmount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrderList);

        lblCurrentDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCurrentDate.setText("Date:");

        txtCurrentDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(btnAllSaleList, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(dfmStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(53, 53, 53)
                                            .addComponent(dfmEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(495, 495, 495))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(46, 46, 46)
                                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1070, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)
                        .addComponent(lblCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(791, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(lblErrMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCurrentDate)
                                    .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblDate)
                                .addComponent(lblEndDate, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(dfmStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(dfmEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSelect, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(btnAllSaleList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        try {
            // TODO add your handling code here:
            DefaultTableModel dtModel = (DefaultTableModel) this.tblOrderList.getModel();
            dtModel.setRowCount(0);
            if (txtItemCode.getText().equals("") || dfmStartDate.getDate() == null || dfmEndDate.getDate() == null) {
                JOptionPane.showMessageDialog(rootPane, "Please Enter item code, startDate  and endDate");
                txtAmount.setText("");
            } else {
                startDate = inputDateFormat.parse(dfmStartDate.getDate().toString());
                endDate = inputDateFormat.parse(dfmEndDate.getDate().toString());
                if (endDate.compareTo(startDate) < 0) {
                    System.out.println(endDate.compareTo(startDate));
                    JOptionPane.showMessageDialog(rootPane, "Please select the endDate greater than startDate");
                } else {
                    connect();
                    try {
                        if (!txtItemCode.getText().equals("") && dfmStartDate.getDate() != null && dfmEndDate.getDate() != null) {
                            pstmt = con.prepareStatement("select * from order1 where itemCode = ? and dateValue >= ?  and dateValue <= ?");

                            pstmt.setString(1, txtItemCode.getText());
                            System.out.println(txtItemCode.getText());
                            pstmt.setString(2, newInputDateFormat.format(startDate));
                            System.out.println(newInputDateFormat.format(startDate));
                            pstmt.setString(3, newInputDateFormat.format(endDate));
                            System.out.println(newInputDateFormat.format(endDate));

                        } else {
                            if (dfmStartDate.getDate() != null && dfmEndDate.getDate() == null) {
                                lblErrMsg.setText("Please input end date!");
                                return;
                            } else {
                                pstmt = con.prepareStatement("select * from order1 where itemCode = ? or dateValue >= ?  and dateValue <= ?");

                                pstmt.setString(1, txtItemCode.getText());
                                pstmt.setString(2, newInputDateFormat.format(startDate));
                                pstmt.setString(3, newInputDateFormat.format(endDate));
                            }

                        }
                        rs = pstmt.executeQuery();
                        insertRowAtTable(rs);
                        calculateTotalAmount();
                        con.close();
                        pstmt.close();

                    } catch (SQLException ex) {
                        Logger.getLogger(SaleItemList.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(SaleItemList.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnAllSaleListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllSaleListActionPerformed

        DefaultTableModel dtModel = (DefaultTableModel) this.tblOrderList.getModel();
        dtModel.setRowCount(0);
        try {
            connect();
            pstmt = con.prepareStatement("select * from order1");
            rs = pstmt.executeQuery();
            insertRowAtTable(rs);
            calculateTotalAmount();
            con.close();
            pstmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(SaleItemList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAllSaleListActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame();
        int resp = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit?",
                "Exit?", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION) {
            //frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            //System.exit(0);
            dispose();
            new MainForm().show();
        } else {
            frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtItemCode.setText("");
        txtAmount.setText("");
        dfmStartDate.setDate(null);
        dfmEndDate.setDate(null);
        DefaultTableModel dtModel = (DefaultTableModel) this.tblOrderList.getModel();
        dtModel.setRowCount(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemCodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaleItemList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaleItemList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaleItemList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaleItemList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SaleItemList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllSaleList;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSelect;
    private com.toedter.calendar.JDateChooser dfmEndDate;
    private com.toedter.calendar.JDateChooser dfmStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCurrentDate;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblErrMsg;
    private javax.swing.JLabel lblName;
    private javax.swing.JTable tblOrderList;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCurrentDate;
    private javax.swing.JTextField txtItemCode;
    // End of variables declaration//GEN-END:variables

    private void insertRowAtTable(ResultSet rs) {
        try {
            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            while (rs.next()) {
                name = rs.getString(1);
                price = rs.getString(2);
                count = rs.getString(3);
                totalAmount = rs.getString(4);
                dateValue = rs.getString(5);
                Object row[] = {name, price, count, totalAmount, dateValue};
                DefaultTableModel dtmodel = (DefaultTableModel) this.tblOrderList.getModel();
                dtmodel.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SaleItemList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void connect() {
        try {
            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/orderlist", "root", "phyu12@");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SaleItemList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void calculateTotalAmount() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        int rowCnt = tblOrderList.getRowCount();
        long totalAmt = 0;
        for (int i = 0; i < rowCnt; i++) {
            totalAmt = totalAmt + Integer.parseInt(tblOrderList.getValueAt(i, 3).toString().replace(",", ""));
            System.out.println(totalAmt);
        }
        txtAmount.setText(String.valueOf(nf.format(totalAmt)));
    }

    private void currentDate() {
        // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();
        txtCurrentDate.setText(dtf.format(now));
        txtCurrentDate.enable(false);
    }

}
