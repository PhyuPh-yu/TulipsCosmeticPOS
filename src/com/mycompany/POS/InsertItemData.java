/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.POS;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.sql.Connection;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phyuphyuhnin
 */
public class InsertItemData extends javax.swing.JFrame {

    /**
     * Creates new form java
     */
    PreparedStatement pstm;
    Connection con;
    String itemCode;
    String itemName;
    int itemPrice;
    int itemCount;
    ResultSet rs;
    boolean checkItemCode = false;

    public InsertItemData() {
        initComponents();
        getContentPane().setBackground(Color.cyan);
        currentDate();
        Toolkit toolKit = getToolkit();
        Dimension size = toolKit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);

    }

    public void setTxtItemCode(JTextField txtItemCode) {
        this.txtItemCode = txtItemCode;
    }

    public JTextField getTxtItemCode() {
        return txtItemCode;
    }

    public JTextField getTxtItemName() {
        return txtItemName;
    }

    public JTextField getTxtUnitPrice() {
        return txtUnitPrice;
    }

    public void setTxtItemName(JTextField txtItemName) {
        this.txtItemName = txtItemName;
    }

    public void setTxtUnitPrice(JTextField txtUnitPrice) {
        this.txtUnitPrice = txtUnitPrice;
    }

    public JTextField getTxtItemCount() {
        return txtItemCount;
    }

    public void setTxtItemCount(JTextField txtItemCount) {
        this.txtItemCount = txtItemCount;
    }

    public JTextField getTxtCurrentDate() {
        return txtCurrentDate;
    }

    public void setTxtCurrentDate(JTextField txtCurrentDate) {
        this.txtCurrentDate = txtCurrentDate;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblItemCode = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtItemCode = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        txtUnitPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblItemCount = new javax.swing.JLabel();
        txtItemCount = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItemList = new javax.swing.JTable();
        btnSelect = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtItemCodeSearch = new javax.swing.JTextField();
        btnNoItem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtCurrentDate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Insert ItemData Form");
        setPreferredSize(new java.awt.Dimension(1150, 750));
        setResizable(false);

        lblItemCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblItemCode.setText("Item Code");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Item Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Unit Price");

        txtItemCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtItemName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtUnitPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 255));
        jLabel4.setText("Tulip 's Cosmetic Store");

        btnInsert.setBackground(new java.awt.Color(102, 102, 255));
        btnInsert.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(102, 102, 255));
        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(51, 51, 255));
        btnClose.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lblItemCount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblItemCount.setText("Item Count");

        txtItemCount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtItemCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCountActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(102, 102, 255));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblItemList.setBackground(new java.awt.Color(51, 255, 153));
        tblItemList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Item Price", "Item Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblItemList);

        btnSelect.setBackground(new java.awt.Color(102, 102, 255));
        btnSelect.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(102, 102, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("All search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 102, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Search Item Code");

        txtItemCodeSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtItemCodeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCodeSearchActionPerformed(evt);
            }
        });

        btnNoItem.setBackground(new java.awt.Color(102, 102, 255));
        btnNoItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNoItem.setText("No Stock");
        btnNoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoItemActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Date :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 957, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblItemCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtUnitPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtItemCount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(125, 125, 125)
                                        .addComponent(lblItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(382, 382, 382))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(btnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel1)
                                .addGap(29, 29, 29)
                                .addComponent(txtItemCodeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNoItem, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(240, 240, 240))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblItemCode)
                            .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInsert))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(btnDelete))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtItemCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblItemCount)
                            .addComponent(btnClear)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch)
                            .addComponent(btnSelect)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItemCodeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNoItem))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        if (txtItemCode.getText().equals("") || txtItemName.getText().equals("") || txtUnitPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please enter ItemCode , ItemName , ItemPrice and ItemCount!");
        } else {
            checkItemCode = checkItemCode();
            if (checkItemCode) {
                JOptionPane.showMessageDialog(rootPane, "The itemcode is already exist, Please input other itemcode!");
            }
            if (!checkItemCode) {
                connect();
                try {
                    pstm = con.prepareStatement("insert into itemcode(ItemCode, ItemName, ItemPrice, ItemCount) values(?, ?, ?, ?);");
                    pstm.setString(1, txtItemCode.getText());
                    pstm.setString(2, txtItemName.getText());
                    pstm.setString(3, txtUnitPrice.getText());
                    pstm.setString(4, txtItemCount.getText());
                    pstm.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "Successfully inserted!");
                    con.close();
                    pstm.close();
                } catch (SQLException ex) {
                    Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtItemCode.setText("");
        txtItemName.setText("");
        txtUnitPrice.setText("");
        txtItemCount.setText("");
        txtItemCodeSearch.setText("");
        //tblItemList.removeAll();
        DefaultTableModel dtModal = (DefaultTableModel) this.tblItemList.getModel();
        dtModal.setRowCount(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame();
        int resp = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit!", "Exit?", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_OPTION) {
            dispose();
            new MainForm().show();
        } else {

        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int itemcount = 0;
        checkItemCode = checkItemCode();
        itemcount = selectItemCount(0);
        if (!txtItemCount.getText().equals("")) {
            itemcount = itemcount + Integer.parseInt(txtItemCount.getText());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please enter the Item Count");
        }

        if ((!txtItemCode.getText().equals("")) && (!checkItemCode())) {
            JOptionPane.showMessageDialog(rootPane, "The itemcode is not exist , please type another itemcode!");
        }
        if (checkItemCode) {
            connect();
            try {
                pstm = con.prepareStatement("update itemcode set ItemCount = ? where ItemCode = ?;");
                pstm.setString(1, String.valueOf(itemcount));
                pstm.setString(2, txtItemCode.getText());
                pstm.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Successfully updated!");
            } catch (SQLException ex) {
                Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        // TODO add your handling code here:
        if (txtItemCodeSearch.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please input item search code!");
        } else {
            connect();
            try {
                pstm = con.prepareStatement("select * from itemcode where ItemCode = ?;");
                pstm.setString(1, txtItemCodeSearch.getText());
                rs = pstm.executeQuery();
                while (rs.next()) {
                    itemCode = rs.getString(1);
                    itemName = rs.getString(2);
                    itemPrice = Integer.parseInt(rs.getString(3));
                    itemCount = Integer.parseInt(rs.getString(4));
                    DefaultTableModel dtmodel = (DefaultTableModel) this.tblItemList.getModel();
                    Object rows[] = {itemCode, itemName, itemPrice, itemCount};
                    dtmodel.addRow(rows);
                }

                con.close();
                pstm.close();
            } catch (SQLException ex) {
                Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtmodel = (DefaultTableModel) this.tblItemList.getModel();
        connect();
        try {
            dtmodel.setRowCount(0);
            pstm = con.prepareStatement("select * from itemcode;");
            rs = pstm.executeQuery();
            while (rs.next()) {
                itemCode = rs.getString(1);
                itemName = rs.getString(2);
                itemPrice = Integer.parseInt(rs.getString(3));
                itemCount = Integer.parseInt(rs.getString(4));
                Object rows[] = {itemCode, itemName, itemPrice, itemCount};
                dtmodel.addRow(rows);
            }

            con.close();
            pstm.close();
        } catch (SQLException ex) {
            Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /*
        Delete the item count
    
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int itemcount = 0;
        checkItemCode = checkItemCode();
        itemcount = selectItemCount(0);

        if (!checkItemCode && !txtItemCode.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "The input itemcode is not exist , Please input the other itemcode!");
        } else if (txtItemCount.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please input the item count!");
        } else if (itemcount > Integer.parseInt(txtItemCount.getText())) {
            JFrame frame = new JFrame();
            int resp = JOptionPane.showConfirmDialog(frame, "Are you sure you want to decrease the itemcount!", "Exit?", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                itemcount = itemcount - Integer.parseInt(txtItemCount.getText());
                connect();
                try {
                    pstm = con.prepareStatement("update itemcode set ItemCount =? where ItemCode =?;");
                    pstm.setString(1, String.valueOf(itemcount));
                    pstm.setString(2, txtItemCode.getText());
                    pstm.executeUpdate();
                    con.close();
                    pstm.close();
                    JOptionPane.showMessageDialog(rootPane, "Successfully decrease the itemcount");
                } catch (SQLException ex) {
                    Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JFrame frame = new JFrame();
            int resp = JOptionPane.showConfirmDialog(frame, "Are you sure you want to delete this itemcount!", "Exit?", JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                connect();
                try {
                    pstm = con.prepareStatement("delete from itemcode where ItemCode = ?");
                    pstm.setString(1, txtItemCode.getText());
                    pstm.executeUpdate();
                    con.close();
                    pstm.close();
                    JOptionPane.showMessageDialog(rootPane, "Successfully delete the itemcount");
                } catch (SQLException ex) {
                    Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtItemCodeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCodeSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemCodeSearchActionPerformed

    private void txtItemCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemCountActionPerformed

    private void btnNoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoItemActionPerformed
        try {
            // TODO add your handling code here:

            DefaultTableModel dtmodel = (DefaultTableModel) this.tblItemList.getModel();
            dtmodel.setRowCount(0);
            connect();
            pstm = con.prepareStatement("select * from itemcode where ItemCount = 0");
            rs = pstm.executeQuery();
            while (rs.next()) {
                itemCode = rs.getString(1);
                itemName = rs.getString(2);
                itemPrice = Integer.parseInt(rs.getString(3));
                itemCount = Integer.parseInt(rs.getString(4));
                Object rows[] = {itemCode, itemName, itemPrice, itemCount};
                dtmodel.addRow(rows);
            }
        } catch (SQLException ex) {
            Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNoItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertItemData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertItemData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertItemData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertItemData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertItemData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnNoItem;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelect;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblItemCode;
    private javax.swing.JLabel lblItemCount;
    private javax.swing.JTable tblItemList;
    private javax.swing.JTextField txtCurrentDate;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemCodeSearch;
    private javax.swing.JTextField txtItemCount;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables

    private void connect() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

        try {
            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/orderlist", "root", "phyu12@");

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SaleItemList.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    private boolean checkItemCode() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        if (txtItemCode.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please input the itemcode!");
        } else {
            connect();
            try {
                pstm = con.prepareStatement("select ItemCode from itemcode;");
                rs = pstm.executeQuery();
                while (rs.next()) {
                    if (txtItemCode.getText().equals(rs.getString(1))) {
                        return true;
                    }
                }
                pstm.close();
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(InsertItemData.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }

    private int selectItemCount(int i) {
        int countData = 0;
        connect();
        try {
            //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

            pstm = con.prepareStatement("select ItemCount from itemcode where ItemCode = ?");
            pstm.setString(1, txtItemCode.getText());
            rs = pstm.executeQuery();
            while (rs.next()) {
                countData = Integer.parseInt(rs.getString(1));
                //System.out.println(itemCount);
            }
            // return countData;

            con.close();
            pstm.close();
        } catch (SQLException ex) {
            Logger.getLogger(SaleForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return countData;
    }

    private void currentDate() {
       // throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();
        txtCurrentDate.setText(dtf.format(now));
        txtCurrentDate.enable(false);
    }
}
